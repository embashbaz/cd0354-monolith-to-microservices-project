# En supposant que le fichier .travis.yml se trouve dans le répertoire du projet et qu'il existe un sous-répertoire distinct pour chaque service.
# Utilisez les commandes `docker-compose` ou les commandes `docker build` individuelles.
# Construire
language: node_js
node_js:
  - 16

services:
  - docker
script:
  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker build -t udagram-api-user ./udagram-api-user
  - docker build -t udagram-reverseproxy ./udagram-reverseproxy
  - docker build -t udagram-frontend ./udagram-frontend
  # Faites de même pour les trois autres images
  # Marquage
  - docker tag udagram-api-feed emeryb/udagram-api-feed:v1b
  - docker tag udagram-api-user emeryb/udagram-api-user:v1b
  - docker tag udagram-reverseproxy emeryb/udagram-reverseproxy:v1b
  - docker tag udagram-frontend emeryb/udagram-frontend:local
# Faire de même pour les trois autres images ``
#```bash
# Push
# En supposant que DOCKER_PASSWORD et DOCKER_USERNAME sont définis dans les paramètres du dépôt Travis
after_success:
  - echo "$DOCKER_PASSWORD". | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push emeryb/udagram-api-feed:v1b
  - docker push emeryb/udagram-api-user:v1b
  - docker push emeryb/udagram-reverseproxy:v1b
  - docker push emeryb/udagram-frontend:local
# Faites de même pour les trois autres ""